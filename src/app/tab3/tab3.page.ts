import { Component } from '@angular/core';
import { PollService } from '../service/poll/poll.service';
import Swal from 'sweetalert2';

@Component({
  selector: 'app-tab3',
  templateUrl: 'tab3.page.html',
  styleUrls: ['tab3.page.scss']
})
export class Tab3Page {
  detail: any = {
    cat: 'Report For Month Of February',
    type: 'New',
    date: '12:00PM',
    req_id: '122',
    remark: 'Generated By Nikhil'
  };
  comment: any = [{
    name: 'AAAA',
    status: 'Resolved',
    date: '100',
    bg: '#f1c84b',
  },{
    name: 'BBBB',
    status: 'Resolved',
    date: '90',
    bg: '#f1c84b',
  },{
    name: 'CCCC',
    status: 'Resolved',
    date: '45',
    bg: '#f1c84b',
  }];

  title : any;
  series:any=[];
  chart : any;

  slideAchivement = {
    initialSlide: 0,
    slidesPerView: 1.1,
    autoplay: true
  }

  achivemnt: any = [{
    title: 'MLA',
    date: '12-01-2021',
    name: 'Nikhil Chaudhary',
    stream: 'BCA II Year',
    clg: 'Deen Dayal College'
  },{
    title: 'MP',
    date: '12-01-2021',
    name: 'Nikhil Chaudhary',
    stream: 'BCA II Year',
    clg: 'Deen Dayal College'
  },{
    title: 'PARSHAD',
    date: '12-01-2021',
    name: 'Nikhil Chaudhary',
    stream: 'BCA II Year',
    clg: 'Deen Dayal College'
  }];   

  question :any=[];
  answers:any=[];
  question2:any=[];
  question3:any=[];
  USTEMP = localStorage.getItem('user');

  getuserdata: any=[];
  hide = false;
  hide2 = false;
  hide3 = false;


  isModalOpen = false;
  xaxis:any=[];
  questions:any=[];
  q:any=[]
  constructor(
    private api : PollService 
  ) {
    if (this.USTEMP) {
      this.getuserdata = JSON.parse(this.USTEMP) ;
    } 

  }
  ngOnInit() {
    this.chart1();
    this.get_poll();
    this.get_vs_poll();
    this.get_yes_no();
    this.get_poll2();
    this.get_answers();
    
  }


  chart1() : void{
    this.title = {
      text : 'Attendence',
    };
    this.series =[{
      name : 'Present',
      data : [10,20,12,77]
    }];
    this.chart = {
      type : 'bar'
    };
    this.xaxis= {
      categories: ["A", "B", "C", "D"]
    }

  }

  get_poll(){
    this.api.get_question().subscribe({
      next:(data:any) =>{
        console.log(data);
        this.question = data;
       
    
      },
      error:() =>{
       
      
      },
      complete:() =>{
       
     
       
      }
    })
  
  }

  get_answers(){
    const que = {"u_id" : this.getuserdata.u_id}
    this.api.get_poll_answers(que).subscribe({
      next:(data:any) =>{
        console.log(data);
        this.answers = data;
       
    
      },
      error:() =>{
       
      
      },
      complete:() =>{
       
     
       
      }
    })
  
  }

  get_vs_poll(){

    this.api.get_question_vs().subscribe({
      next:(data:any) =>{
        console.log(data);
        this.question2 = data;
       
    
      },
      error:() =>{
       
      
      },
      complete:() =>{
       
     
       
      }
    })
  
  }

  get_yes_no(){

    this.api.get_question_yes_no().subscribe({
      next:(data:any) =>{
        console.log(data);
        this.question3 = data;
       
    
      },
      error:() =>{
       
      
      },
      complete:() =>{
       
     
       
      }
    })
  
  }

  action(dat:any,que:any){
    
    // console.log(dat);
    // console.log(que);
    // console.log(this.getuserdata.u_id);
    const ans = {"u_id": this.getuserdata.u_id, "question": que, "answer": dat}
    this.api.post_answer(ans).subscribe({
      next:(data:any) =>{
        console.log(data);
      
    
      },
      error:() =>{
        Swal.fire({
          'imageUrl' :'assets/icon/login.gif',
          'imageHeight':'100px', 
          'title': 'Internal Server Error',
           heightAuto: false , 
           timer: 3000
          });
      
      },
      complete:() =>{
       
     
      }
    })
  
  }


  action2(dat:any,que:any){
    
    // console.log(dat);
    // console.log(que);
    // console.log(this.getuserdata.u_id);
    const ans = {"u_id": this.getuserdata.u_id, "question": que, "answer": dat}
    this.api.post_answer(ans).subscribe({
      next:(data:any) =>{
        console.log(data);
      
    
      },
      error:() =>{
        Swal.fire({
          'imageUrl' :'assets/icon/login.gif',
          'imageHeight':'100px', 
          'title': 'Internal Server Error',
           heightAuto: false , 
           timer: 3000
          });
      
      },
      complete:() =>{
       this.get_answers();
       this.get_data()
     
      }
    })
  
  }

  // this.api.get_answer_by_u_id(ans).subscribe({
  //   next:(data:any) =>{
  //     console.log(data);
    
  
  //   },
  //   error:() =>{
  //     Swal.fire({
  //       'imageUrl' :'assets/icon/login.gif',
  //       'imageHeight':'100px', 
  //       'title': 'Internal Server Error',
  //        heightAuto: false , 
  //        timer: 3000
  //       });
    
  //   },
  //   complete:() =>{
     
   
     
  //   }
  // })
   
  get_poll2(){
    const dat2 = {'u_id':"JAN/2023/23"}
    this.api.get_question2(dat2).subscribe({
      next:(data:any) =>{
        console.log(data);
        // this.question = data;
       
    
      },
      error:() =>{
       
      
      },
      complete:() =>{
       
     
      }
    })
  
  }
  setOpen(isOpen: boolean) {
    this.isModalOpen = isOpen;
    this.hide = true;
    this.hide2 = false;
    this.hide3 = false;


   
  }
  setOpen1(isOpen: boolean) {
    this.isModalOpen = isOpen;
    this.hide = false;
    this.hide2 = true;
    this.hide3 = false;


   
  }
  setOpen3(isOpen: boolean) {
    this.isModalOpen = isOpen;
    this.hide = false;
    this.hide2 = false;
    this.hide3 = true;


   
  }

  openmodal(dat:any){
    // this.questions = dat;
    // console.log(this.questions);
    this.q = dat;

    this.get_data()
  }

  get_data(){
    const data = {"u_id": this.getuserdata.u_id, "question": this.q}
    this.api.get_answer_by_question(data).subscribe({
      next:(data:any) =>{
        console.log(data);
        if(!data.length ){
         console.log(data.length);
        //  alert('yes')
        Swal.fire({
                'imageUrl' :'assets/icon/login.gif',
                'imageHeight':'100px', 
                'title': 'Please Fill Your Answer First',
                 heightAuto: false , 
                 timer: 3000
                });
            
        this.isModalOpen = false;

        }
        else{
          this.questions = data[0]

        }
      
    
      },
      error:() =>{
      
      },
      complete:() =>{
     
      }
    })
  }
}
