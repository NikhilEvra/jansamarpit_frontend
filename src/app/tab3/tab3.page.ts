import { Component } from '@angular/core';
import { PollService } from '../service/poll/poll.service';

@Component({
  selector: 'app-tab3',
  templateUrl: 'tab3.page.html',
  styleUrls: ['tab3.page.scss']
})
export class Tab3Page {
  detail: any = {
    cat: 'Report For Month Of February',
    type: 'New',
    date: '12:00PM',
    req_id: '122',
    remark: 'Generated By Nikhil'
  };
  comment: any = [{
    name: 'AAAA',
    status: 'Resolved',
    date: '100',
    bg: '#f1c84b',
  },{
    name: 'BBBB',
    status: 'Resolved',
    date: '90',
    bg: '#f1c84b',
  },{
    name: 'CCCC',
    status: 'Resolved',
    date: '45',
    bg: '#f1c84b',
  }];

  title : any;
  series:any=[];
  chart : any;

  slideAchivement = {
    initialSlide: 0,
    slidesPerView: 1.1,
    autoplay: false
  }

  achivemnt: any = [{
    title: 'MLA',
    date: '12-01-2021',
    name: 'Nikhil Chaudhary',
    stream: 'BCA II Year',
    clg: 'Deen Dayal College'
  },{
    title: 'MP',
    date: '12-01-2021',
    name: 'Nikhil Chaudhary',
    stream: 'BCA II Year',
    clg: 'Deen Dayal College'
  },{
    title: 'PARSHAD',
    date: '12-01-2021',
    name: 'Nikhil Chaudhary',
    stream: 'BCA II Year',
    clg: 'Deen Dayal College'
  }];

  question :any=[];
  answers:any=[];
  constructor(
    private api : PollService
  ) {}
  ngOnInit() {
    this.chart1();
    this.get_poll();
    
  }


  chart1() : void{
    this.title = {
      text : 'Attendence',
    };
    this.series =[{
      name : 'Present',
      data : [10,20,12,11,10,20,12,11]
    }];
    this.chart = {
      type : 'line'
    };

  }

  get_poll(){
    this.api.get_question().subscribe({
      next:(data:any) =>{
        console.log(data);
        this.question = data;
       
    
      },
      error:() =>{
       
      
      },
      complete:() =>{
       
     
       
      }
    })
  
  }

  
  get_answers(){
    const que = {"q_id" : this.question}
    this.api.get_question().subscribe({
      next:(data:any) =>{
        console.log(data);
        this.answers = data;
       
    
      },
      error:() =>{
       
      
      },
      complete:() =>{
       
     
       
      }
    })
  
  }
}
